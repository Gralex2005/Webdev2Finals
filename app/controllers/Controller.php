<?php
namespace App\Controllers;

/**
 * This class is the base class for Controllers
 */
class Controller{
    protected $layout;
    protected $pageTitle;
    protected $route;
    protected $csrf_token;
    protected $homeUrl;
    protected $errors = [];

    protected $assetList;


    public function __construct(){
        $this->layout = "layout/main"; //set default page layout
        $this->pageTitle = "Home";
        $errors=[];
    }

    // CSRF Token generation
    public function generateCsrfToken(){ 
        // Automatically generate a CSRF token if it's not present
        if (empty($_SESSION['csrf_token'])) {
            $_SESSION['csrf_token'] = bin2hex(random_bytes(32));  // Generate a secure CSRF token
        }
        $this->csrf_token = $_SESSION['csrf_token'];
    }

    // CSRF Token validation
    public function validateCsrfToken($params) {
        // Check if the CSRF token exists in the session and the form submission
        if (empty($_SESSION['csrf_token']) || empty($params['csrf_token']) || $params['csrf_token'] !== $_SESSION['csrf_token']) {
        call_user_func([new ErrorController(), 'notFound'],null);
            die();  
        }
    }

    public function view($view, $params = []) {
        // Extract variables from the associative array $params
        // This will make keys of the array available as variables in the view
        extract($params);

        // Convertint object properties as plain variables to make them accessible int he view files
        $csrf_token = $this->csrf_token;
        $errors = $this->errors;
        $title = $this->pageTitle;

        // Store assets
        $assetList = [];

        // Start output buffering
        // This captures any output generated by the included view file
        ob_start();

        // Include the specified view file, passing the extracted variables
        require_once __DIR__."/../views/{$view}.php";

        // Retrieve the captured output from the buffer and store it in $content
        // Then clean (erase) the buffer to avoid sending output to the browser prematurely
        $content = ob_get_clean();


        // Include the layout file
        // The layout can use the $content variable to render the view's content
        include __DIR__ . "/../views/layout/{$this->layout}.php";
    }

    public static function redirect($route){
        header("Location: ". BASE_URL."$route");
        exit;
    }

}